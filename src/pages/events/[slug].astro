---
import { getCollection, render } from 'astro:content';
import BaseLayout from '@layout/BaseLayout.astro';
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';

export const getStaticPaths: GetStaticPaths = async () => {
  const events = await getCollection('events');
  return events.map(event => ({
    params: { slug: event.id },
    props: { event }
  }));
};

interface Props {
  event: CollectionEntry<'events'>;
}

const { event } = Astro.props;
const { Content } = await render(event);

const seo = {
  title: `${event.data.title} | CVD-Net`,
  description: event.data.description
};
---

<BaseLayout seo={seo}>
  <div class="container mx-auto max-w-4xl px-4 py-12">
    <!-- Back navigation -->
    <div class="mb-8">
      <a href="/news-events" class="inline-flex items-center text-emerald-600 hover:text-emerald-700 transition-colors">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Back to News & Events
      </a>
    </div>

    <!-- Event header -->
    <div class="mb-12 text-center">
      <h1 class="mb-6 text-4xl font-bold lg:text-5xl">{event.data.title}</h1>
      
      <!-- Event info -->
      <div class="mb-8 flex flex-wrap justify-center gap-x-8 gap-y-4 text-lg">
        {event.data.type === 'event' && (
          <>
            {event.data.dateDisplay && (
              <div class="flex items-center text-gray-700">
                <svg class="w-5 h-5 mr-2 text-teal-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 8h12v8H4V8z" clip-rule="evenodd" />
                </svg>
                <span class="font-medium">{event.data.dateDisplay}</span>
              </div>
            )}
            
            {event.data.location && (
              <div class="flex items-center text-gray-700">
                <svg class="w-5 h-5 mr-2 text-teal-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                </svg>
                <span class="font-medium">{event.data.location}</span>
              </div>
            )}
          </>
        )}
        
        {event.data.type === 'news' && event.data.publishDate && (
          <div class="flex items-center text-gray-700">
            <svg class="w-5 h-5 mr-2 text-teal-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 8h12v8H4V8z" clip-rule="evenodd" />
            </svg>
            <span class="font-medium">Published: {event.data.publishDate.toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
          </div>
        )}
        
        {event.data.author && (
          <div class="flex items-center text-gray-700">
            <svg class="w-5 h-5 mr-2 text-teal-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
            </svg>
            <span class="font-medium">{event.data.author}</span>
          </div>
        )}
        
        <div class="flex items-center">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-teal-100 text-teal-700">
            {event.data.type === 'event' ? 'Event' : 'News'}
          </span>
        </div>
      </div>
      
      <!-- Action buttons -->
      <div class="mb-6 flex flex-wrap justify-center gap-3">
        {event.data.links && event.data.links.length > 0 && (
          event.data.links.map((link) => (
            <a
              href={link.url}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center px-4 py-2 bg-teal-600 text-white font-medium rounded-lg hover:bg-teal-700 transition-colors"
            >
              {link.text}
              <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
            </a>
          ))
        )}
      </div>
    </div>

    <!-- Event content -->
    <div class="prose prose-lg max-w-none markdown-content">
      <Content />
    </div>
  </div>
</BaseLayout>

<style is:global>
  .markdown-content h2 {
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: #374151;
    font-family: "DM Sans", sans-serif;
  }
  
  .markdown-content h3 {
    margin-bottom: 0.75rem;
    font-size: 1.25rem;
    font-weight: 600;
    color: #374151;
    font-family: "DM Sans", sans-serif;
  }
  
  .markdown-content h4 {
    margin-bottom: 0.5rem;
    font-size: 1.125rem;
    font-weight: 600;
    color: #374151;
    font-family: "DM Sans", sans-serif;
  }
  
  .markdown-content p {
    margin-bottom: 1rem;
    font-size: 1.125rem;
    line-height: 1.75;
    color: #64748b;
  }
  
  .markdown-content ul, .markdown-content ol {
    margin-bottom: 1.5rem;
    margin-top: 1rem;
    padding-left: 1.5rem;
    font-size: 1.125rem;
    line-height: 1.75;
    color: #64748b;
  }
  
  .markdown-content ul {
    list-style-type: disc;
  }
  
  .markdown-content ol {
    list-style-type: decimal;
  }
  
  .markdown-content li {
    margin-bottom: 0.75rem;
    padding-left: 0.25rem;
  }
  
  .markdown-content li > p {
    margin-bottom: 0.5rem;
  }
  
  .markdown-content li:last-child {
    margin-bottom: 0;
  }
  
  .markdown-content a {
    color: #0d9488;
    text-decoration: underline;
  }
  
  .markdown-content a:hover {
    color: #0f766e;
  }
  
  .markdown-content strong {
    font-weight: 600;
    color: #374151;
  }
  
  .markdown-content em {
    font-style: italic;
  }
  
  .markdown-content table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1.5rem;
  }
  
  .markdown-content th {
    border: 1px solid #e2e8f0;
    background-color: #f8fafc;
    padding: 0.75rem 1rem;
    text-align: left;
    font-weight: 600;
    color: #374151;
  }
  
  .markdown-content td {
    border: 1px solid #e2e8f0;
    padding: 0.75rem 1rem;
    color: #64748b;
  }
</style>