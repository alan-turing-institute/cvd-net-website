---
import { getCollection } from 'astro:content';
import BaseLayout from "@layout/BaseLayout.astro";

const seo = {
	title: "News & Events | CVD-Net",
	description: "Latest news and upcoming events from the CVD-Net project.",
};

// Get all events from the content collection
const allEvents = await getCollection('events', ({ data }) => {
	// Filter out drafts in production
	return import.meta.env.PROD ? data.draft !== true : true;
});

// Sort events by date and separate upcoming/past
const now = new Date();
const upcomingEvents = allEvents
	.filter(event => event.data.date >= now)
	.sort((a, b) => a.data.date.getTime() - b.data.date.getTime());

const pastEvents = allEvents
	.filter(event => event.data.date < now)
	.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

---

<BaseLayout seo={seo}>
	<section class="py-16 lg:py-20">
		<div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h1 class="mb-4 text-4xl font-bold lg:text-5xl">News & Events</h1>
				<p class="text-foreground/80 text-lg">
					Latest news and upcoming events from the CVD-Net project.
				</p>
			</div>


			<!-- Upcoming Events -->
			{upcomingEvents.length > 0 && (
				<div class="mb-16">
					<h2 class="text-3xl font-bold mb-8 text-emerald-700">Upcoming Events</h2>
					<div class="space-y-8">
						{upcomingEvents.map((event) => (
							<article class="border-l-4 border-emerald-500 pl-6 hover:border-emerald-600 transition-colors">
								<div class="flex flex-col lg:flex-row lg:items-start lg:justify-between gap-4">
									<div class="flex-1">
										<div class="flex items-center gap-3 mb-2">
											<h3 class="text-xl font-bold">
												<a href={`/events/${event.id}`} class="hover:text-emerald-600 transition-colors">
													{event.data.title}
												</a>
											</h3>
											<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-teal-100 text-teal-700">
												{event.data.type}
											</span>
										</div>
										
										<div class="flex flex-wrap gap-4 mb-3 text-sm text-gray-600">
											<div class="flex items-center">
												<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
													<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 8h12v8H4V8z" clip-rule="evenodd" />
												</svg>
												{event.data.dateDisplay}
											</div>
											{event.data.location && (
												<div class="flex items-center">
													<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
														<path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
													</svg>
													{event.data.location}
												</div>
											)}
										</div>
										
										<p class="text-gray-600 mb-3 line-clamp-2">
											{event.data.description}
										</p>
										
										<a 
											href={`/events/${event.id}`} 
											class="inline-flex items-center text-emerald-600 hover:text-emerald-700 font-medium transition-colors"
										>
											Read more
											<svg class="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
											</svg>
										</a>
									</div>
									
									{event.data.links && event.data.links.length > 0 && (
										<div class="flex flex-wrap gap-2 lg:flex-col lg:items-end">
											{event.data.links.slice(0, 2).map((link) => (
												<a 
													href={link.url} 
													target="_blank" 
													rel="noopener noreferrer"
													class="inline-flex items-center px-3 py-1 text-sm border border-gray-300 text-gray-600 rounded hover:bg-gray-50 hover:text-emerald-600 hover:border-emerald-600 transition-colors"
												>
													{link.text}
													<svg class="ml-1 w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
													</svg>
												</a>
											))}
										</div>
									)}
								</div>
							</article>
						))}
					</div>
				</div>
			)}

			<!-- Past Events -->
			{pastEvents.length > 0 && (
				<div>
					<h2 class="text-3xl font-bold mb-8 text-gray-600">Past Events</h2>
					<div class="space-y-6">
						{pastEvents.map((event) => (
							<article class="opacity-75 hover:opacity-100 transition-opacity">
								<div class="flex flex-col sm:flex-row sm:items-start gap-4">
									<div class="sm:w-32 flex-shrink-0">
										<div class="text-sm font-semibold text-gray-500">{event.data.dateDisplay}</div>
									</div>
									
									<div class="flex-1">
										<h3 class="text-lg font-semibold mb-1">
											<a href={`/events/${event.id}`} class="hover:text-emerald-600 transition-colors">
												{event.data.title}
											</a>
										</h3>
										<p class="text-gray-500 text-sm line-clamp-2">
											{event.data.description}
										</p>
									</div>
								</div>
							</article>
						))}
					</div>
				</div>
			)}

			{allEvents.length === 0 && (
				<div class="text-center py-12">
					<p class="text-gray-500 text-lg">No events posted yet. Check back soon!</p>
				</div>
			)}
		</div>
	</section>
</BaseLayout>