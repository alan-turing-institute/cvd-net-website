---
import { getCollection } from 'astro:content';
import BaseLayout from "@layout/BaseLayout.astro";

const seo = {
	title: "News & Events | CVD-Net",
	description: "Latest news and upcoming events from the CVD-Net project.",
};

// Get all events and news from the events collection
const allPosts = await getCollection('events', ({ data }) => {
	// Filter out drafts in production
	return import.meta.env.PROD ? data.draft !== true : true;
});

// Sort all posts by date (use date for events, publishDate for news)
const sortedPosts = allPosts.sort((a, b) => {
	const dateA = a.data.type === 'event' ? a.data.date : a.data.publishDate;
	const dateB = b.data.type === 'event' ? b.data.date : b.data.publishDate;
	return dateB!.getTime() - dateA!.getTime(); // Most recent first
});

// Group posts by month and year
const groupedPosts = sortedPosts.reduce((groups, post) => {
	const postDate = post.data.type === 'event' ? post.data.date : post.data.publishDate;
	const monthYear = postDate!.toLocaleDateString('en-GB', { year: 'numeric', month: 'long' });
	
	if (!groups[monthYear]) {
		groups[monthYear] = [];
	}
	groups[monthYear].push(post);
	
	return groups;
}, {} as Record<string, typeof sortedPosts>);

// Convert to array of [monthYear, posts] pairs for easier iteration
const groupedPostsArray = Object.entries(groupedPosts);

---

<BaseLayout seo={seo}>
	<section class="py-16 lg:py-20">
		<div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h1 class="mb-4 text-4xl font-bold lg:text-5xl">News & Events</h1>
				<p class="text-foreground/80 text-lg">
					Latest news and upcoming events from the CVD-Net project.
				</p>
			</div>


			<!-- Grouped Posts -->
			{groupedPostsArray.length > 0 ? (
				<div class="space-y-16">
					{groupedPostsArray.map(([monthYear, posts]) => (
						<section>
							<h2 class="text-2xl font-bold mb-8 text-gray-800 border-b border-gray-200 pb-2">
								{monthYear}
							</h2>
							<div class="space-y-8">
								{posts.map((post) => (
									<article class="py-6">
										<div class="flex flex-col gap-4">
											<div class="flex-1">
												<h3 class="text-xl font-bold mb-3">
													<a href={`/${post.data.type === 'event' ? 'events' : 'posts'}/${post.id}`} class="hover:text-teal-600 transition-colors">
														{post.data.title}
													</a>
												</h3>
												
												<div class="flex flex-wrap gap-4 mb-4 text-sm text-gray-600">
													<div class="flex items-center gap-4">
														<div class="flex items-center">
															<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
																<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zM4 8h12v8H4V8z" clip-rule="evenodd" />
															</svg>
															{post.data.type === 'event' ? post.data.dateDisplay : post.data.publishDate?.toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })}
														</div>
														{post.data.type === 'event' && post.data.location && (
															<div class="flex items-center">
																<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
																	<path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
																</svg>
																{post.data.location}
															</div>
														)}
														<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-teal-100 text-teal-700">
															{post.data.type === 'event' ? 'Event' : 'News'}
														</span>
													</div>
												</div>
												
												<p class="text-gray-600 mb-4 line-clamp-3">
													{post.data.description}
												</p>
												
												<a 
													href={`/${post.data.type === 'event' ? 'events' : 'posts'}/${post.id}`} 
													class="inline-flex items-center text-teal-600 hover:text-teal-700 font-medium transition-colors"
												>
													Read more
													<svg class="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
													</svg>
												</a>
											</div>
										</div>
									</article>
								))}
							</div>
						</section>
					))}
				</div>
			) : (
				<div class="text-center py-12">
					<p class="text-gray-500 text-lg">No posts yet. Check back soon!</p>
				</div>
			)}
		</div>
	</section>
</BaseLayout>